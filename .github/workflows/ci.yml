name: CI

on: [pull_request]

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: requirements-dev.txt
    - name: Install itself
      run: |
        pip install .
    - name: Run mypy
      run: python mypy_run.py
    - name: Prepare twine checker
      run: |
        pip install -U build twine wheel
        python -m build
    - name: Run twine checker
      run: |
        twine check dist/*

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', 'pypy-3.8', 'pypy-3.9', 'pypy-3.10' ]
        exclude:
          - os: macos-latest
            python-version: 3.8
          - os: macos-latest
            python-version: 3.9
          - os: macos-latest
            python-version: pypy-3.8
          - os: macos-latest
            python-version: pypy-3.9
          - os: macos-latest
            python-version: pypy-3.10
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: requirements.txt
    - name: Run unittests
      run: pytest tests
      env:
        COLOR: 'yes'
    - run: python -m coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
